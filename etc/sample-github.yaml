---

- core:
    listen: ["0.0.0.0", 8081]
    url: "http://eye.defiler.tk:8081"
    secrets: /etc/rci-secrets.yaml
    jobs-logs: /tmp/rci-logs
    logs-url: "https://seecloud.mirantis.com/rci/logs/"

- service:
    name: monitor
    module: rci.services.monitor
    http_path: monitor
    logs_path: /tmp/rci-monitor-logs/
    dbm_path: /tmp/rci-monitor
    logs_path: /tmp/rci-logs
    cookie_name: rcm
    access:
      allow_anonymous: true
      admin:
        users: [redixin]
        orgs: []
      operator:
        users: []
        orgs: [seecloud, r-ci]

- service:
    module: rci.services.github
    name: gh
    data-path: /tmp/rci-gh
    sessions-path: /tmp/rci-gh/sessions

- provider:
    name: st
    module: rci.providers.static
    clusters:
      portal:
        vm:
          username: ubuntu
          hostname: 172.16.169.58
          keys: ["/home/eye/.ssh/test"]

- provider:
    name: os
    module: rci.providers.openstack
    max_vms: 64
    ssh:
      default_username: centos
      key_name: rci
      private_key_path: /home/eye/.ssh/test
      access_net: "rci-int-net"
      jumphost:
        hostname: sc
        username: ubuntu
    clusters:
      os-image-builder:
        vm:
          image: ubuntu-os-image-builder
          username: ubuntu
          flavor: m1.small
          interfaces:
            - ["static", "rci-int-net"]
          user_data: |
            #cloud-config
            disable_root: false
      seecloud_cluster:
        master:
          password: mirantis
          image: centos-from-iso
          flavor: m1.medium
          interfaces:
            - ["static", "rci-int-net"]
            - ["dynamic", "testcluster-int-net"]
        pr1:
          image: centos-from-iso
          flavor: rci-2vcpu-4096ram-20disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]
        pr2:
          image: centos-from-iso
          flavor: rci-2vcpu-4096ram-20disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]
        pr3:
          image: centos-from-iso
          flavor: rci-2vcpu-4096ram-20disk
          interfaces:
            - ["dynamic", "testcluster-int-net"]

- script:
    name: env
    data: |
      env

- script:
    name: git-checkout
    data: |
      mkdir -p $GITHUB_REPO
      cd $GITHUB_REPO
      cd ..
      git clone git://github.com/$GITHUB_REPO.git || true
      cd ../$GITHUB_REPO
      [[ -v GITHUB_REMOTE ]] && git remote add _pr $GITHUB_REMOTE
      git remote update
      git checkout $GITHUB_HEAD

- script:
    name: install-docker-centos
    data: |
      sudo sh -xs <<EOF
      yum -y install docker python-netaddr
      service docker start
      chown centos /var/run/docker.sock
      EOF

- script:
    name: prepare-automation-master
    username: root
    data: |
      env
      /usr/sbin/sysctl -w net.ipv4.ip_forward=1
      /usr/sbin/ip addr add 10.1.1.1/24 dev eth1
      /usr/sbin/ip link set eth1 up
      # add all hostnames to /etc/hosts
      for S in ${!RCI_SERVER_*}
      do
       SVNAME=$(echo $S | sed 's/^RCI_SERVER_\([[:alnum:]]\+\).*/\1/')
       echo "${!S} $SVNAME" >> /etc/hosts
      done
      # create user and add ssh key
      useradd -m centos
      mkdir /home/centos/.ssh
      echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbn5QfmFjSQWlINsFpxNkpsAxUaeBZu2CM3hp7TTPcjMvjfXLEhSHfwtjjKxTzy8JXILJxypb3WcyNCgxzYYrZerejBu0p1V13JWFl6zIZ6aN4xgqBsehWrg2Ly/6L9LxY1MSDYDUbR48Hq6QsnQan9d07R8a/Uv/SdcUPHM05iaKCVOKklRq9z3dGSS9qv43PjB2o12OOLPkxoxR+qf7pdMk0A9NnT/J+ihKIFDjKz3y4X+4Wp8Wic9cP7wq08jbwo5hQV7dCcWgMxLf/T+c5dmfipsApmU7614+nBXf7Hk8nbK0Eaq3n9Qiyv4aTBboKyIvvaC4gWT6JfATLiwsj eye@et' >> /home/centos/.ssh/authorized_keys
      echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDF13qwUbb+lva8KCNE6IppajmGfF3MJIFhIPD7HYwzeIyI3INlc6nMMOk+r4a6IO3okVxgqRi27boebvUpazw0Jw4T4e1oLQpWCxvhTZkukFsrd9DJiCj07VXluua2ofaCRLCSHVLdjAH4WocmZeCXpZF1ldDeNBeuX0iYJiFBslrG/pmOuCm3IEL7GmoIJjF0Idtwo3tkWcvCUXKvBaVqCHS34Q/KJLAvZc95MLESs/kdnhfxhxbpWrRRFcZn/zIxuuptuTBzWOPd7CnsOLo5PCnuxIfDznDYYzQUJq6OmwMZipepTtymXUvFQiqq7xc/HmNR51vowqwoftgHNxYvoaQgXkneWFnq4Cl9WZaLVs90wNgQewPaKmhL8ia1S2C3Cub0ILsbU/091L7adBeZI87pkfx72HhFQRUOcVprgPAEKKTbEvUQKAQ4rZ6GOIU5Tz/fKf1sXLhiTEAgpGpaTyyTP04vpgP5iY4kcXQHpRsPxg1BQ+93S3KqF2XAdXvrA4eZfAHmGhsAOePdnJQZVf8c4exsgkIGEyM9Wgi2ZWlq7oY0tFJLf+Kq7y23QuC6isIqBBIDN/TtmHRpiWNY4zwmGhzSxBdA6zMVy9PblrU71w1xVBS4KKwUqbWbP06pA7V04sp8kGKz5OmN9Z+rdTQJ2v41SSU71kT6XSFFOQ== vstoiko@mirantis.com' >> /home/centos/.ssh/authorized_keys
      chown -R centos /home/centos/.ssh

- script:
    name: prepare-automation-nodes
    interpreter: /bin/bash -xs
    data: |
      # create ssh key and copy to every node
      ssh-keygen -t rsa -N "" -f .ssh/id_rsa
      PUBLIC_KEY=$(cat .ssh/id_rsa.pub)
      cat > /tmp/.node-setup.sh << EOF
      mkdir /root/.ssh || true
      echo $PUBLIC_KEY >> /root/.ssh/authorized_keys
      chmod 600 /root/.ssh/authorized_keys
      EOF
      upload_key () {
      n=0
      until [ $n -ge 60 ]
      do
       n=$[$n+1]
       sshpass -p mirantis ssh -o StrictHostKeyChecking=no root@${!SRV} sh -xs < /tmp/.node-setup.sh
       SVNAME=$(echo $SRV | sed 's/^RCI_SERVER_\([[:alnum:]]\+\).*/\1/')
       ssh -o StrictHostKeyChecking=no root@$SVNAME id
       if [ $? -eq 0 ]
       then
        return
       fi
       sleep 10
      done
      echo "Timeout waiting for host"
      exit 255
      }
      for SRV in ${!RCI_SERVER_pr*}
      do
      upload_key
      done

- job:
    name: env
    provider: os
    cluster: seecloud_cluster
    scripts:
      master:
        - prepare-automation-master
        - git-checkout
        - prepare-automation-nodes

- job:
    name: deploy_fake_portal
    provider: st
    cluster: portal
    scripts:
      vm:
        - deploy-portal

- script:
    name: deploy-portal
    data: |
        export GITHUB_REPO="seecloud/ceagle"
        export GITHUB_HEAD="master"
        export GITHUB_PR_ID="12"
        export GITHUB_PR_ACTION="opened"
        #export GITHUB_PR_ACTION="closed"
        #export GITHUB_PR_ACTION="synchronized"
        CEAGLE_NAME="ceagle-${GITHUB_PR_ID}"
        PORTAL_NAME="portal-${GITHUB_PR_ID}"
        PROJECT=$(echo $GITHUB_REPO | awk -F '/' '{print $2}')
        DIR=$(mktemp -d)
        cd $DIR
        git clone git://github.com/seecloud/ceagle.git &
        git clone git://github.com/seecloud/fuel-devops-portal.git &
        wait
        cd $PROJECT
        git checkout $GITHUB_HEAD
        TITLE=$(git log --format=%B -n 1 HEAD | head -n 1 | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g; s/'"'"'/\&#39;/g')
        cd ..
        docker build -t $CEAGLE_NAME ceagle
        docker build -t $PORTAL_NAME fuel-devops-portal
        docker kill $CEAGLE_NAME || true
        docker kill $PORTAL_NAME || true
        docker rm $(docker ps -q -a -f state=exited) || true
        docker run -d --name="$CEAGLE_NAME" $CEAGLE_NAME
        CEAGLE_IP=$(docker inspect --format='{{.NetworkSettings.IPAddress}}' $CEAGLE_NAME)
        PORT=3000
        for USED in $(docker ps | sed -n 's/.*:\([0-9]\+\)\->[0-9]\+.*/\1/g p' | sort -g); do
            if [ $USED -eq $PORT ]; then
                ((PORT++))
            else
                break
            fi
        done
        mkdir conf.d
        sed "s|proxy_pass.*$|proxy_pass http://$CEAGLE_IP:5000;|" fuel-devops-portal/etc/nginx/fuel-devops-portal.conf > conf.d/default.conf
        docker run -d --name="$PORTAL_NAME" -v $DIR/conf.d:/etc/nginx/conf.d -p $PORT:80 $PORTAL_NAME
        rm -fr $DIR/ceagle
        rm -fr $DIR/fuel-devops-portal
        URL="http://172.16.169.58:$PORT"
        sed -i "/Welcome/a<a href=$URL>$TITLE</a>" /usr/share/nginx/html/index.html

- matrix:
    name: image-builder
    projects:
      - r-ci/os-image-builder
      - r-ci/automation
      - redixin/automation
    cr:
      - env
      - deploy_fake_portal
    push:
      - env
